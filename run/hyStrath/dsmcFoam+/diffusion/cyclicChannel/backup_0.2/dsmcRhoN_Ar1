/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1612+                                |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0.2";
    object      dsmcRhoN_Ar1;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 -3 0 0 0 0 0];

internalField   nonuniform List<scalar> 
1000
(
78
96
85
103
100
90
110
93
99
99
107
99
77
89
97
100
107
86
97
110
114
98
104
87
111
101
103
101
108
109
86
94
77
91
92
79
103
89
103
99
87
103
112
95
95
102
103
106
102
107
103
88
113
101
87
82
105
96
82
96
105
99
92
119
92
111
116
112
93
90
91
80
113
113
104
84
101
111
97
93
100
109
98
91
96
88
97
90
91
83
96
97
104
104
93
98
93
95
86
102
100
94
95
111
92
110
116
97
90
86
79
84
82
79
96
87
86
92
92
109
74
116
92
101
102
114
108
101
104
91
94
98
97
85
105
108
94
90
87
116
93
102
80
81
104
104
89
102
113
114
91
105
108
99
109
93
95
95
106
91
107
93
83
76
102
112
99
98
93
103
75
104
93
88
100
98
98
110
102
95
111
91
95
95
111
105
106
103
116
94
88
92
88
85
108
90
95
94
94
116
87
84
95
106
117
86
82
122
115
80
103
105
97
102
91
91
107
89
79
114
99
97
90
108
99
107
95
93
95
81
110
100
95
120
101
91
103
110
94
93
91
93
93
84
112
91
103
103
82
103
113
114
90
83
95
98
108
96
106
90
76
111
101
113
80
91
90
104
89
105
117
98
108
111
100
96
99
91
93
87
102
71
93
94
86
101
90
95
83
112
109
98
95
84
102
96
96
108
116
98
107
115
97
88
91
98
87
87
89
97
98
85
85
90
98
103
89
111
99
94
98
108
92
116
105
92
92
93
95
101
107
93
111
93
89
104
94
115
93
99
94
127
97
98
93
99
105
98
84
115
106
78
100
105
105
96
96
99
128
103
81
103
93
94
95
99
102
105
101
89
89
112
109
103
95
107
90
99
98
97
87
105
102
81
108
100
93
100
106
94
108
94
95
107
95
96
97
104
103
94
113
100
93
121
109
102
107
98
91
107
103
91
96
93
94
93
88
97
95
97
97
105
96
110
105
102
108
95
96
99
110
113
107
109
78
108
87
79
117
91
108
99
103
92
91
95
107
96
96
81
89
97
105
107
90
99
106
110
101
82
93
94
118
107
110
100
82
113
86
121
83
102
89
103
83
93
94
99
77
88
101
90
95
104
98
93
100
99
91
81
96
102
121
84
104
102
78
93
91
102
74
97
106
91
124
84
90
92
83
110
104
113
87
114
87
95
95
101
96
97
81
99
82
74
96
105
113
96
94
95
108
96
96
109
96
100
106
102
94
86
88
94
90
101
94
84
104
77
82
100
98
93
103
91
104
89
90
98
106
96
95
102
104
83
82
91
91
101
89
87
87
87
86
115
100
90
87
73
96
92
91
95
110
86
93
101
89
102
111
106
98
87
92
90
86
85
98
99
91
97
97
108
95
90
101
102
92
97
100
103
85
88
91
93
87
103
91
100
109
101
86
108
90
113
97
98
85
115
107
95
84
98
111
109
107
99
90
84
104
104
101
101
104
98
87
91
97
98
73
93
120
96
105
114
94
77
89
101
101
107
100
96
88
94
94
87
101
88
85
108
99
93
96
98
90
92
114
100
96
96
102
109
122
97
98
106
112
100
79
92
114
88
89
109
102
120
105
82
91
95
111
85
98
114
84
82
102
101
68
91
96
96
116
105
83
88
98
90
96
78
95
101
98
96
89
107
96
90
104
97
81
93
86
96
95
105
98
87
105
81
85
95
97
98
121
105
102
92
100
125
98
86
85
103
101
96
94
91
97
111
106
105
98
91
99
94
93
96
124
112
102
91
109
105
97
86
98
98
109
100
102
91
101
97
107
90
91
107
92
89
88
92
89
101
87
90
101
109
92
103
95
91
104
90
97
83
100
85
96
90
123
98
106
105
91
104
94
87
94
105
97
107
101
101
103
97
93
104
98
105
85
101
104
82
102
94
90
91
98
84
80
83
102
103
92
104
92
88
97
104
102
86
93
110
88
94
103
104
104
103
98
90
101
86
103
105
104
107
117
90
99
100
102
106
101
98
83
88
100
91
98
92
98
102
91
91
83
95
97
115
104
103
99
89
93
105
93
91
98
98
75
95
91
95
94
105
101
116
94
109
88
89
108
107
102
88
101
94
110
95
82
75
90
97
93
95
107
91
92
84
102
100
87
102
97
99
98
84
98
114
87
95
102
103
111
95
84
84
76
85
103
100
75
107
100
112
108
95
110
98
110
96
108
93
102
72
76
92
74
81
92
95
84
82
96
102
85
95
91
107
88
100
96
85
95
100
88
108
107
90
102
97
106
100
109
99
97
83
94
100
)
;

boundaryField
{
    bottom
    {
        type            calculated;
        value           uniform 0;
    }
    top
    {
        type            calculated;
        value           uniform 0;
    }
    inlet
    {
        type            cyclic;
    }
    outlet
    {
        type            cyclic;
    }
    back
    {
        type            symmetry;
    }
    front
    {
        type            symmetry;
    }
}


// ************************************************************************* //
