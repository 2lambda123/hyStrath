/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1706                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0.3";
    object      dsmcRhoN_Ar;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 -3 0 0 0 0 0];


internalField   nonuniform List<scalar> 
1000
(
103
76
97
95
98
90
93
95
89
100
110
86
104
102
85
81
96
79
92
87
104
89
111
97
89
86
93
107
112
97
105
80
111
106
94
96
98
91
96
100
91
99
113
96
110
111
107
95
96
93
91
105
90
68
85
89
93
89
103
103
106
115
103
98
103
104
108
100
86
90
78
98
103
88
95
94
78
104
94
108
90
113
103
102
86
108
120
95
90
91
103
91
106
98
95
82
98
97
92
81
102
114
89
100
100
83
90
91
76
83
85
73
127
77
100
102
109
89
96
101
105
105
85
110
109
101
108
85
92
104
100
101
94
88
96
109
99
104
95
90
98
110
98
100
110
90
103
99
105
104
94
85
94
104
92
107
91
114
109
88
92
113
87
100
103
87
92
100
107
80
91
107
94
109
100
89
93
93
101
101
88
81
97
113
94
95
87
111
95
105
105
99
102
91
99
108
90
78
100
98
93
107
90
105
96
97
114
86
91
96
100
96
98
97
92
83
96
102
89
95
75
123
97
87
107
111
103
91
95
101
90
104
124
101
121
103
82
96
95
110
94
99
93
125
121
93
93
98
109
97
101
106
101
96
77
102
85
104
91
94
111
110
114
105
103
90
108
96
101
107
90
102
106
109
83
84
95
101
101
98
85
91
88
94
105
95
97
104
96
99
98
96
73
92
105
101
109
104
113
93
89
84
87
113
91
91
97
95
107
92
101
97
87
101
105
89
101
99
111
101
99
96
103
102
104
89
89
102
80
107
101
113
110
101
95
79
93
101
88
86
110
101
94
94
76
93
99
103
89
107
114
91
104
81
92
100
92
89
101
94
106
95
106
98
95
96
80
95
79
111
80
78
94
90
91
99
98
106
100
104
114
90
86
95
125
97
97
101
86
103
96
105
99
74
90
84
104
82
94
117
101
96
105
77
106
72
121
97
104
115
113
104
86
90
110
91
88
90
93
96
107
94
103
96
101
109
115
94
97
89
105
87
99
83
97
98
103
96
112
105
103
97
87
87
89
113
104
80
93
92
94
95
89
93
101
94
119
105
112
99
104
100
99
98
97
95
98
107
101
99
93
104
107
108
84
106
95
107
103
94
87
91
89
100
97
89
87
118
100
85
89
110
112
80
87
97
97
88
118
92
83
112
108
102
98
89
102
109
70
84
107
105
93
100
104
108
100
96
93
119
114
97
94
103
101
87
92
105
83
92
109
101
119
117
95
97
97
114
122
90
89
79
103
95
111
99
93
100
103
105
94
87
105
97
89
95
114
111
82
95
106
75
92
100
100
112
101
90
85
100
97
95
91
93
114
100
75
100
107
96
104
70
95
91
87
101
92
83
89
93
101
86
102
89
91
99
102
102
109
111
91
101
109
104
94
85
106
103
95
87
79
93
93
90
109
103
106
110
104
103
98
88
115
107
110
90
90
93
83
95
80
90
90
106
99
95
96
112
104
84
104
94
102
102
90
89
95
83
90
101
106
102
95
94
97
91
88
106
92
95
99
108
95
101
93
83
106
90
99
106
102
111
87
93
92
88
96
105
94
91
87
98
113
94
120
76
92
88
94
105
100
92
94
89
102
90
101
87
96
104
99
103
83
114
110
106
116
98
85
97
90
91
91
110
96
113
97
84
99
92
95
90
101
100
80
103
91
89
90
73
97
101
90
108
80
101
83
104
105
88
100
99
88
104
114
100
98
114
101
90
87
85
91
93
102
95
109
93
93
95
96
103
93
123
96
107
88
90
115
93
98
74
90
105
105
85
83
109
77
107
103
109
88
91
77
111
101
97
98
78
95
95
103
99
105
85
84
104
103
86
98
96
100
81
91
127
108
88
100
88
101
99
86
106
96
80
97
109
107
83
116
83
89
99
104
98
83
88
94
108
96
96
91
105
91
105
95
86
108
104
97
91
93
107
86
79
79
92
111
93
93
98
102
90
114
88
91
91
97
84
103
82
95
90
94
98
107
84
107
98
120
106
80
124
100
97
114
107
107
89
96
106
115
86
99
100
97
100
83
103
110
107
106
83
111
96
75
117
101
101
79
112
112
107
101
92
97
90
89
87
88
91
87
101
82
90
95
88
95
108
97
95
98
109
96
116
99
113
97
85
100
84
90
101
78
97
87
101
93
100
120
105
89
93
94
112
102
108
99
94
98
99
90
95
105
112
94
104
91
104
87
100
92
104
95
76
119
91
86
82
96
94
93
101
97
97
83
85
114
81
80
86
117
101
93
98
96
87
101
103
91
109
85
109
112
100
92
101
89
105
)
;

boundaryField
{
    bottom
    {
        type            calculated;
        value           uniform 0;
    }
    top
    {
        type            calculated;
        value           uniform 0;
    }
    inlet
    {
        type            cyclic;
    }
    outlet
    {
        type            cyclic;
    }
    back
    {
        type            symmetry;
    }
    front
    {
        type            symmetry;
    }
}


// ************************************************************************* //
