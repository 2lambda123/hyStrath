/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1706                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0.29";
    object      dsmcRhoN_Ar;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 -3 0 0 0 0 0];


internalField   nonuniform List<scalar> 
1000
(
99
100
84
113
109
86
98
105
102
96
101
104
102
91
112
97
85
79
89
104
115
98
91
92
100
118
97
92
91
99
115
104
117
73
109
98
85
103
93
83
88
103
97
88
103
105
99
93
101
95
84
112
99
89
94
113
100
87
79
98
105
89
106
94
104
91
103
94
98
109
101
84
95
106
123
91
99
110
90
73
86
114
94
106
92
96
120
96
111
96
119
96
110
90
95
97
73
101
97
90
108
96
89
105
93
112
86
104
101
112
92
111
89
85
82
111
98
94
84
98
103
94
95
103
94
93
96
95
93
99
100
85
99
106
94
93
92
101
98
100
95
99
91
102
108
89
114
94
81
76
102
89
107
91
119
104
98
96
111
87
88
99
95
91
85
103
120
81
95
102
86
85
95
106
113
107
99
92
93
112
95
110
81
110
83
91
109
87
80
93
97
92
81
110
100
109
89
84
91
122
84
107
89
105
85
98
89
91
111
86
114
116
96
107
106
97
103
106
100
114
107
101
83
94
92
95
106
98
111
102
104
98
89
115
96
107
91
109
102
115
84
90
105
103
91
93
97
81
103
88
105
105
94
109
99
97
85
101
83
98
101
98
111
132
110
88
84
109
94
107
99
92
104
98
93
94
89
93
77
95
115
109
94
100
94
91
96
87
102
94
73
95
104
106
97
90
97
89
83
99
91
94
99
87
109
87
115
103
93
103
82
114
90
88
108
113
76
88
102
89
92
103
93
91
114
94
101
94
87
96
107
100
83
90
111
98
82
108
88
89
80
89
90
92
95
102
91
95
91
104
99
89
97
94
79
126
113
101
92
95
72
82
97
104
110
96
105
100
114
111
82
98
76
84
98
91
109
99
105
79
89
91
110
93
111
121
107
99
87
88
93
95
88
92
86
77
93
108
104
93
98
100
93
98
96
87
108
120
95
116
101
118
95
112
102
106
89
111
119
94
105
114
99
85
87
90
88
99
95
88
99
101
110
122
91
122
102
105
87
111
95
97
88
67
93
93
104
105
109
99
104
92
99
91
84
74
95
86
109
102
103
97
107
105
93
96
94
97
126
89
110
109
90
107
99
88
96
80
94
80
89
105
86
106
92
101
99
82
96
114
99
84
98
103
95
90
93
104
91
103
120
115
75
103
86
96
89
96
102
75
88
87
107
107
104
92
90
119
100
89
85
96
102
92
101
96
94
102
89
113
109
118
88
96
91
102
83
101
92
94
111
99
94
96
86
96
77
89
105
91
97
109
91
103
90
90
102
91
99
107
88
97
103
91
83
97
98
92
89
78
101
95
95
112
95
99
83
107
97
73
88
80
84
88
118
97
101
89
112
90
90
114
105
123
103
112
78
103
95
97
92
78
93
91
107
90
99
109
87
94
109
96
100
102
90
106
108
102
105
94
103
89
106
106
94
83
99
93
99
115
89
100
89
103
103
81
88
90
105
100
89
88
119
94
94
87
92
92
96
109
84
99
95
105
109
103
87
100
101
85
105
107
98
96
103
102
99
124
116
93
80
87
96
104
126
101
94
88
95
91
103
96
99
96
104
100
92
94
95
109
104
94
99
94
95
119
99
95
96
101
110
114
93
85
109
96
81
83
86
90
88
94
92
97
96
86
98
71
75
100
93
89
86
104
86
99
97
118
94
99
88
93
82
115
89
95
83
94
105
80
97
82
88
109
91
94
97
89
94
87
90
107
96
93
83
97
95
118
94
100
102
99
93
94
101
112
93
86
89
90
96
93
108
89
95
77
112
95
105
89
106
83
95
105
115
74
92
99
109
109
91
101
85
95
121
95
103
91
93
91
100
105
88
100
107
102
89
104
95
101
99
108
101
114
97
89
85
91
101
98
116
104
100
95
85
82
92
87
85
92
108
93
93
103
108
83
92
92
96
86
96
104
102
90
101
84
99
82
78
101
88
108
91
112
118
93
97
93
107
111
102
107
94
95
110
113
102
78
100
92
105
98
111
100
93
83
100
105
96
93
101
94
107
90
105
102
89
118
128
101
106
106
90
110
100
79
117
117
84
83
110
84
105
83
98
92
85
87
107
93
90
90
114
89
100
94
105
88
86
113
114
99
86
110
105
91
125
97
85
100
97
91
97
101
96
92
102
116
85
108
99
91
90
97
88
102
87
112
91
95
102
91
89
88
98
102
105
93
95
104
94
78
90
95
90
103
113
100
94
104
93
114
108
103
107
93
91
86
95
93
99
88
97
89
94
96
91
106
104
91
94
83
99
88
102
88
113
100
74
100
)
;

boundaryField
{
    bottom
    {
        type            calculated;
        value           uniform 0;
    }
    top
    {
        type            calculated;
        value           uniform 0;
    }
    inlet
    {
        type            cyclic;
    }
    outlet
    {
        type            cyclic;
    }
    back
    {
        type            symmetry;
    }
    front
    {
        type            symmetry;
    }
}


// ************************************************************************* //
