/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1706                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0.27";
    object      dsmcRhoN_Ar;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 -3 0 0 0 0 0];


internalField   nonuniform List<scalar> 
1000
(
65
117
109
103
96
94
107
102
96
109
95
111
85
97
93
118
85
114
95
98
85
100
90
89
95
95
89
104
99
85
101
90
96
99
113
93
95
95
112
99
94
98
93
104
91
92
102
97
107
105
83
101
100
96
110
105
111
84
107
101
93
102
94
99
99
102
101
106
104
98
91
101
118
77
98
107
88
103
99
97
91
96
93
103
107
97
97
95
101
112
98
90
84
116
103
94
93
89
87
91
122
112
94
84
102
95
104
93
81
102
92
102
96
88
93
113
104
108
103
69
106
91
99
118
94
93
88
89
107
96
82
93
100
97
123
94
100
99
96
97
86
97
103
93
81
101
105
92
98
102
89
100
103
98
101
94
96
111
97
103
94
100
96
94
92
100
99
103
109
91
86
84
87
98
99
97
94
101
104
79
109
95
109
95
108
98
123
87
84
83
96
98
102
92
111
101
102
111
102
82
99
74
111
91
95
99
100
92
107
97
104
88
100
109
102
101
98
110
80
91
97
101
94
95
86
104
108
113
105
100
102
97
90
86
113
89
87
105
98
102
92
103
103
98
103
101
96
106
91
115
97
104
100
107
86
101
100
81
106
99
91
89
87
113
115
104
105
104
111
87
99
97
100
91
97
101
83
98
94
100
89
98
105
81
91
117
100
97
106
97
82
96
97
89
95
122
83
97
103
95
93
85
125
106
98
113
96
91
91
97
99
93
90
101
94
91
95
98
83
101
91
92
91
99
107
92
89
89
98
98
95
89
103
112
88
96
100
71
87
82
98
111
98
96
102
104
101
87
98
106
100
86
103
80
104
83
117
109
114
102
86
106
89
116
95
103
107
85
106
100
103
111
91
105
92
109
97
91
101
100
135
100
99
123
101
93
111
112
116
93
93
92
100
93
94
102
98
89
99
111
113
106
88
97
92
79
109
100
92
108
106
86
103
96
103
102
113
86
97
97
93
103
90
99
92
91
89
84
99
90
100
117
90
92
89
96
104
108
103
116
98
89
118
86
101
102
108
94
126
84
85
103
118
82
94
84
83
100
106
82
110
98
97
102
101
110
84
112
101
72
89
105
104
89
79
88
93
86
93
97
106
102
97
98
111
86
121
91
110
102
85
92
101
100
85
90
91
105
96
103
101
94
81
70
108
101
98
79
93
107
121
97
95
90
104
88
108
106
83
97
90
100
83
93
88
85
82
96
92
108
100
85
105
92
97
92
93
101
103
92
107
101
91
84
77
98
88
93
100
106
91
97
110
94
88
99
99
92
102
107
103
101
114
100
92
110
99
104
87
101
109
82
89
86
126
92
102
90
91
94
92
102
100
103
85
95
101
86
101
108
102
94
97
87
95
91
92
104
84
93
108
99
97
112
121
100
90
93
112
89
86
104
92
92
99
84
101
95
73
91
98
105
100
104
111
102
107
94
83
102
99
90
106
101
81
99
87
90
102
92
107
95
111
100
95
88
89
89
86
103
95
102
74
94
105
82
91
90
94
111
97
97
89
94
88
113
97
94
98
103
77
100
110
93
97
91
103
121
101
123
102
92
90
96
104
104
107
106
84
88
97
106
101
95
111
88
101
102
106
98
84
96
108
94
101
98
103
93
80
104
86
95
93
97
100
98
87
111
91
110
96
112
85
98
103
106
84
92
103
80
104
86
102
112
100
103
104
74
89
88
77
96
106
101
103
112
96
99
111
91
84
103
102
97
102
96
103
100
95
98
89
93
100
105
83
98
109
91
104
107
100
114
74
124
108
88
88
97
108
76
91
94
84
105
97
90
85
81
99
106
89
77
92
100
95
100
100
86
116
80
87
97
89
102
85
98
103
96
105
80
119
96
98
104
100
117
89
97
90
96
98
84
101
103
96
78
84
108
91
100
95
118
101
84
80
85
111
97
97
89
91
98
95
100
91
82
86
91
88
78
88
98
77
90
88
108
101
99
82
96
106
102
101
105
77
77
98
107
101
93
97
97
125
115
108
106
112
82
98
100
108
95
110
96
98
102
89
95
86
107
98
90
87
90
114
95
107
93
88
96
100
98
101
94
97
78
116
97
76
100
103
74
98
100
120
104
108
89
103
91
78
97
98
93
99
93
99
97
87
92
81
105
88
93
102
95
111
85
113
78
92
101
103
100
89
96
99
91
103
73
104
100
101
115
102
78
111
79
100
101
99
100
88
86
83
92
97
99
105
99
99
101
97
90
85
92
83
93
93
99
105
99
95
114
93
95
68
88
83
89
99
107
89
109
97
99
103
93
108
97
)
;

boundaryField
{
    bottom
    {
        type            calculated;
        value           uniform 0;
    }
    top
    {
        type            calculated;
        value           uniform 0;
    }
    inlet
    {
        type            cyclic;
    }
    outlet
    {
        type            cyclic;
    }
    back
    {
        type            symmetry;
    }
    front
    {
        type            symmetry;
    }
}


// ************************************************************************* //
