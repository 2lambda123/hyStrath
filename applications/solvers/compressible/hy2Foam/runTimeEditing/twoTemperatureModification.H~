
if(thermo.twoTemperatureDictionary().subDict("thermalRelaxationModels").lookupOrDefault<bool>("applyChanges", false))
{
    //---------------------------------------------------------
    // Re-definition of the relaxation models
    //---------------------------------------------------------
    
    // Vibrational-Translational (V-T) energy transfer
    thermalRelaxModelVT.clear();

    if(not downgradeSingleT)
    {
        thermalRelaxModelVT = relaxationTimeModel::New
        (
            thermo,
            turbulence()
        );
    }

    // Vibrational-Vibrational (V-V) energy transfer
    autoPtr<relaxationTimeModelVV> thermalRelaxModelVV;

    if(downgradeSingleT or downgradeSingleTv)
    {
        thermalRelaxModelVV.clear();
    }
    else
    {
        thermalRelaxModelVV = relaxationTimeModelVV::New
        (
            thermo,
            turbulence()
        );
    }

    // Heavy-particles - free electrons (h-e) energy transfer
    autoPtr<relaxationTimeModelHE> thermalRelaxModelHE;

    if(downgradeSingleT or not containsElectrons)
    {
        thermalRelaxModelHE.clear();
    }
    else
    {
        thermalRelaxModelHE = relaxationTimeModelHE::New
        (
            thermo,
            turbulence()
        );
    }

    // Free-electrons - vibrational energy transfer
    autoPtr<relaxationTimeModeleV> thermalRelaxModeleV;

    if(downgradeSingleT or downgradeSingleTv or not containsElectrons)
    {
        thermalRelaxModeleV.clear();
    }
    else
    {
        thermalRelaxModeleV = relaxationTimeModeleV::New
        (
            thermo,
            turbulence()
        );
    }
    
    
    rarefactionParameters.clear();
    rarefactionParameters = rarefactionParameter::New
    (
        thermo,
        turbulence()
    );
    
    thermo.twoTemperatureDictionary().subDict("thermalRelaxationModels").remove("applyChanges");
}

