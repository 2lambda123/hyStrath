
./boundaries/derived/generalBoundaries/dsmcWangPressureInlet/dsmcWangPressureInlet.C:    const scalar deltaT = mesh_.time().deltaTValue(); // time step size
./boundaries/derived/generalBoundaries/dsmcWangPressureInlet/dsmcWangPressureInlet.C://                 fA*n_*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcWangPressureInlet/dsmcWangPressureInlet.C:                    fA*n_*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcWangPressureInlet/dsmcWangPressureInlet.C:                    fA*n_*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcMassFlowRateInlet/dsmcMassFlowRateInlet.C:    const scalar deltaT = mesh_.time().deltaTValue(); // time step size
./boundaries/derived/generalBoundaries/dsmcMassFlowRateInlet/dsmcMassFlowRateInlet.C:                fA*n_[iD][f]*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcMassFlowRateInlet/dsmcMassFlowRateInlet.C:                    fA*n_[iD][f]*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcMassFlowRateInlet/dsmcMassFlowRateInlet.C:                    fA*n_[iD][f]*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcLiouFangPressureOutletSpecifiedMolarFraction/dsmcLiouFangPressureOutletSpecifiedMolarFraction.C:    const scalar& deltaT = mesh_.time().deltaTValue();
./boundaries/derived/generalBoundaries/dsmcLiouFangPressureOutletSpecifiedMolarFraction/dsmcLiouFangPressureOutletSpecifiedMolarFraction.C:                fA*outletNumberDensity_[f]*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcLiouFangPressureOutletSpecifiedMolarFraction/dsmcLiouFangPressureOutletSpecifiedMolarFraction.C:                    fA*outletNumberDensity_[f]*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcLiouFangPressureOutletSpecifiedMolarFraction/dsmcLiouFangPressureOutletSpecifiedMolarFraction.C:                    fA*outletNumberDensity_[f]*deltaT*mostProbableSpeed

./boundaries/derived/generalBoundaries/dsmcFreeStreamInflowFieldPatch/dsmcFreeStreamInflowFieldPatch.C:    const scalar deltaT = mesh_.time().deltaTValue();
./boundaries/derived/generalBoundaries/dsmcFreeStreamInflowFieldPatch/dsmcFreeStreamInflowFieldPatch.C://                 fA*numberDensities_[i][f]*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcFreeStreamInflowFieldPatch/dsmcFreeStreamInflowFieldPatch.C:                    fA*numberDensities_[i][f]*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcFreeStreamInflowFieldPatch/dsmcFreeStreamInflowFieldPatch.C:                    fA*numberDensities_[i][f]*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcIsothermalPressureOutletSpecifiedMolarFraction/dsmcIsothermalPressureOutletSpecifiedMolarFraction.C:    const scalar& deltaT = mesh_.time().deltaTValue();
./boundaries/derived/generalBoundaries/dsmcIsothermalPressureOutletSpecifiedMolarFraction/dsmcIsothermalPressureOutletSpecifiedMolarFraction.C:                fA*outletNumberDensity_[f]*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcIsothermalPressureOutletSpecifiedMolarFraction/dsmcIsothermalPressureOutletSpecifiedMolarFraction.C:                    fA*outletNumberDensity_*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcIsothermalPressureOutletSpecifiedMolarFraction/dsmcIsothermalPressureOutletSpecifiedMolarFraction.C:                    fA*outletNumberDensity_*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcFreeStreamInflowPatch/dsmcFreeStreamInflowPatch.C:    //const scalar deltaT = mesh_.time().deltaTValue(); // DELETED VINCENT
./boundaries/derived/generalBoundaries/dsmcFreeStreamInflowPatch/dsmcFreeStreamInflowPatch.C:            const scalar deltaT = cloud_.deltaTValue(cellI);
./boundaries/derived/generalBoundaries/dsmcFreeStreamInflowPatch/dsmcFreeStreamInflowPatch.C:                    fA*numberDensities_[i]*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcFreeStreamInflowPatch/dsmcFreeStreamInflowPatch.C:                    fA*numberDensities_[i]*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcYePressureOutletCalculatedMolarFraction/dsmcYePressureOutletCalculatedMolarFraction.C:    const scalar& deltaT = mesh_.time().deltaTValue();
./boundaries/derived/generalBoundaries/dsmcYePressureOutletCalculatedMolarFraction/dsmcYePressureOutletCalculatedMolarFraction.C:            massDensityCorrection[c] = (2.0*deltaT*(outletPressure_ - pressure[c])) / (massDensity[c]*cellWidth_);
./boundaries/derived/generalBoundaries/dsmcYePressureOutletCalculatedMolarFraction/dsmcYePressureOutletCalculatedMolarFraction.C:            velocityCorrection[c] = (2.0*deltaT*(pressure[c] - outletPressure_)) / (massDensity[c]*cellWidth_); //velocity correction for each boundary cell
./boundaries/derived/generalBoundaries/dsmcYePressureOutletCalculatedMolarFraction/dsmcYePressureOutletCalculatedMolarFraction.C:                fA*outletNumberDensity_[f]*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcYePressureOutletCalculatedMolarFraction/dsmcYePressureOutletCalculatedMolarFraction.C:                    fA*outletNumberDensity_[f]*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcYePressureOutletCalculatedMolarFraction/dsmcYePressureOutletCalculatedMolarFraction.C:                    fA*outletNumberDensity_[f]*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcPlumeInflowPatch/dsmcPlumeInflowPatch.C:    const scalar deltaT = mesh_.time().deltaTValue();
./boundaries/derived/generalBoundaries/dsmcPlumeInflowPatch/dsmcPlumeInflowPatch.C:                fA*numberDensities_[i]*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcLiouFangPressureInlet/dsmcLiouFangPressureInlet.C:    const scalar deltaT = mesh_.time().deltaTValue(); // time step size
./boundaries/derived/generalBoundaries/dsmcLiouFangPressureInlet/dsmcLiouFangPressureInlet.C:                    fA*n_*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcLiouFangPressureInlet/dsmcLiouFangPressureInlet.C:                    fA*n_*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcLiouFangPressureInlet/dsmcLiouFangPressureInlet.C:                    fA*n_*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcLiouFangPressureOutletCalculatedMolarFraction/dsmcLiouFangPressureOutletCalculatedMolarFraction.C:    const scalar& deltaT = mesh_.time().deltaTValue();
./boundaries/derived/generalBoundaries/dsmcLiouFangPressureOutletCalculatedMolarFraction/dsmcLiouFangPressureOutletCalculatedMolarFraction.C:                fA*outletNumberDensity_[f]*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcLiouFangPressureOutletCalculatedMolarFraction/dsmcLiouFangPressureOutletCalculatedMolarFraction.C:                    fA*outletNumberDensity_[f]*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcLiouFangPressureOutletCalculatedMolarFraction/dsmcLiouFangPressureOutletCalculatedMolarFraction.C:                    fA*outletNumberDensity_[f]*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcNewPressureOutletCalculatedMolarFraction/dsmcNewPressureOutletCalculatedMolarFraction.C:    const scalar& deltaT = mesh_.time().deltaTValue();
./boundaries/derived/generalBoundaries/dsmcNewPressureOutletCalculatedMolarFraction/dsmcNewPressureOutletCalculatedMolarFraction.C:                fA*outletNumberDensity_[f]*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcNewPressureOutletCalculatedMolarFraction/dsmcNewPressureOutletCalculatedMolarFraction.C:                    fA*outletNumberDensity_[f]*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcNewPressureOutletCalculatedMolarFraction/dsmcNewPressureOutletCalculatedMolarFraction.C:                    fA*outletNumberDensity_[f]*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcChapmanEnskogFreeStreamInflowPatch/dsmcChapmanEnskogFreeStreamInflowPatch.C:    const scalar deltaT = mesh_.time().deltaTValue();
./boundaries/derived/generalBoundaries/dsmcChapmanEnskogFreeStreamInflowPatch/dsmcChapmanEnskogFreeStreamInflowPatch.C://                 fA*numberDensities_[i]*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcChapmanEnskogFreeStreamInflowPatch/dsmcChapmanEnskogFreeStreamInflowPatch.C:                    fA*numberDensities_[i]*deltaT*mostProbableSpeed
./boundaries/derived/generalBoundaries/dsmcChapmanEnskogFreeStreamInflowPatch/dsmcChapmanEnskogFreeStreamInflowPatch.C:                    fA*numberDensities_[i]*deltaT*mostProbableSpeed

./boundaries/derived/patchBoundaries/dsmcFixedHeatFluxWallPatch/dsmcFixedHeatFluxWallPatch.C:    const scalar deltaT = mesh_.time().deltaTValue();
./boundaries/derived/patchBoundaries/dsmcFixedHeatFluxWallPatch/dsmcFixedHeatFluxWallPatch.C:        scalar heatFlux = EcTotSum_/(deltaT*stepCounter_*fA);
./boundaries/derived/patchBoundaries/dsmcRadiationWallFieldPatch/dsmcRadiationWallFieldPatch.C:    const scalar deltaT = mesh_.time().deltaTValue();
./boundaries/derived/patchBoundaries/dsmcRadiationWallFieldPatch/dsmcRadiationWallFieldPatch.C:                (alpha_*cloud_.nParticle()*EcTotSum_[f]/(deltaT*stepCounter_*epsilonSigma_*fA)), 0.25
./boundaries/derived/patchBoundaries/dsmcRadiationWallFieldPatch/BackUpdsmcRadiationWallFieldPatch.C:    const scalar deltaT = mesh_.time().deltaTValue();
./boundaries/derived/patchBoundaries/dsmcRadiationWallFieldPatch/BackUpdsmcRadiationWallFieldPatch.C:    	 TwallRad_ = pow(alpha_*cloud_.nParticle()*EcTotPrev_/(deltaT*epsilonSigma_*patchSurfaceArea_), 0.25); // TwallRad_ here only calculated after first time-step
./boundaries/derived/patchBoundaries/dsmcRadiationWallFieldPatch/BackUpdsmcRadiationWallFieldPatch.C:    TwallRadCumul_ += TwallRad_ +  (1/thermalCapacity_)*deltaT*((cloud_.nParticle()*EcTot_/deltaT) - (patchSurfaceArea_*epsilonSigma_*(pow(TwallRad_, 4.0))));
./boundaries/derived/patchBoundaries/dsmcAdiabaticWallPatch/dsmcAdiabaticWallPatch.C:    const scalar deltaT = mesh_.time().deltaTValue();
./boundaries/derived/patchBoundaries/dsmcDiffuseWallHeatFluxPatch/dsmcDiffuseWallHeatFluxPatch.C:    const scalar deltaT = mesh_.time().deltaTValue();
./boundaries/derived/patchBoundaries/dsmcDiffuseWallHeatFluxPatch/dsmcDiffuseWallHeatFluxPatch.C:    deltaQ_[wppLocalFace] += cloud_.nParticle()*(preIE_ - postIE_)/(deltaT*faceAreas_[wppLocalFace]);
./boundaries/derived/patchBoundaries/dsmcDiffuseWallHeatFluxPatch/dsmcDiffuseWallHeatFluxPatch.C:    const scalar deltaT = mesh_.time().deltaTValue();
./boundaries/derived/patchBoundaries/dsmcDiffuseWallHeatFluxPatch/dsmcDiffuseWallHeatFluxPatch.C:        writeInterval_ = currentTime/(deltaT*resetCounter_);
./boundaries/derived/patchBoundaries/radiationWallPatch/radiationWallPatch.C:    const scalar deltaT = mesh_.time().deltaTValue();
./boundaries/derived/patchBoundaries/radiationWallPatch/radiationWallPatch.C:        alpha_*cloud_.nParticle()*EcTotPrev_/(deltaT*epsilonSigma_*totalPatchSurfaceArea_), 0.25
./boundaries/derived/patchBoundaries/radiationWallPatch/radiationWallPatch.C:                      + (1/thermalCapacity_)*deltaT*((cloud_.nParticle()*EcTot/deltaT) 
./boundaries/derived/patchBoundaries/dsmcFixedHeatFluxFieldPatch/dsmcFixedHeatFluxFieldPatch.C:    const scalar deltaT = mesh_.time().deltaTValue();
./boundaries/derived/patchBoundaries/dsmcFixedHeatFluxFieldPatch/dsmcFixedHeatFluxFieldPatch.C:                scalar heatFlux = EcTotSum_[f]/(deltaT*nSamplesAverage_*fA);



./clouds/dsmcCloud.C:    Cloud<dsmcParcel>::move(td, mesh_.time().deltaTValue());





./reactions/derived/mixedTypeIIDissociationReverseExchange/mixedTypeIIDissociationReverseExchange.C:        const scalar& deltaT = mesh_.time().deltaT().value();
./reactions/derived/mixedTypeIIDissociationReverseExchange/mixedTypeIIDissociationReverseExchange.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/mixedTypeIIDissociationReverseExchange/mixedTypeIIDissociationReverseExchange.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/mixedTypeIIDissociationReverseExchange/OldmixedTypeIIDissociationReverseExchange.C:        const scalar& deltaT = mesh_.time().deltaT().value();
./reactions/derived/mixedTypeIIDissociationReverseExchange/OldmixedTypeIIDissociationReverseExchange.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*cellVolume_);
./reactions/derived/mixedTypeIIDissociationReverseExchange/OldmixedTypeIIDissociationReverseExchange.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*cellVolume_);
./reactions/derived/forwardAssociativeIonisationDissimilarSpecies/forwardAssociativeIonisationDissimilarSpecies.C:        const scalar& deltaT = mesh_.time().deltaT().value();
./reactions/derived/forwardAssociativeIonisationDissimilarSpecies/forwardAssociativeIonisationDissimilarSpecies.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/forwardAssociativeIonisationDissimilarSpecies/forwardAssociativeIonisationDissimilarSpecies.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/forwardAssociativeIonisationDissimilarSpecies/forwardAssociativeIonisationDissimilarSpecies.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/recombination/recombination.C:        const scalar& deltaT = mesh_.time().deltaT().value();
./reactions/derived/recombination/recombination.C:        )/(counterIndex*deltaT*rhoA_*rhoB_*rhoC_*cellVolume_);
./reactions/derived/atomIonIonisation/atomIonIonisation.C:        const scalar& deltaT = mesh_.time().deltaT().value();
./reactions/derived/atomIonIonisation/atomIonIonisation.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/moleculeAtomDissociationIonisation/moleculeAtomDissociationIonisation.C:        const scalar& deltaT = mesh_.time().deltaT().value();
./reactions/derived/moleculeAtomDissociationIonisation/moleculeAtomDissociationIonisation.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/moleculeAtomDissociationIonisation/moleculeAtomDissociationIonisation.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/moleculeAtomDissociationIonisation/moleculeAtomDissociationIonisation.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/mixedTypeIIDissociationForwardExchange/mixedTypeIIDissociationForwardExchange.C:        const scalar& deltaT = mesh_.time().deltaT().value();
./reactions/derived/mixedTypeIIDissociationForwardExchange/mixedTypeIIDissociationForwardExchange.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/mixedTypeIIDissociationForwardExchange/mixedTypeIIDissociationForwardExchange.C:                )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/mixedTypeIIDissociationForwardExchange/OldmixedTypeIIDissociationForwardExchange.C:        const scalar& deltaT = mesh_.time().deltaT().value();
./reactions/derived/mixedTypeIIDissociationForwardExchange/OldmixedTypeIIDissociationForwardExchange.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*cellVolume_);
./reactions/derived/mixedTypeIIDissociationForwardExchange/OldmixedTypeIIDissociationForwardExchange.C:                )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*cellVolume_);
./reactions/derived/electronImpactTransition/electronImpactTransition.C:        const scalar& deltaT = mesh_.time().deltaT().value();
./reactions/derived/electronImpactTransition/electronImpactTransition.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/electronImpactTransition/electronImpactTransition.C:        Info<< "deltaT = "<<  deltaT << endl;
./reactions/derived/dissociationIonisationTypeIDissimilarSpecies/dissociationIonisationTypeIDissimilarSpecies.C:        const scalar& deltaT = mesh_.time().deltaT().value();
./reactions/derived/dissociationIonisationTypeIDissimilarSpecies/dissociationIonisationTypeIDissimilarSpecies.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/dissociationIonisationTypeIDissimilarSpecies/dissociationIonisationTypeIDissimilarSpecies.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/dissociationIonisationTypeIDissimilarSpecies/dissociationIonisationTypeIDissimilarSpecies.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/dissociationIonisationTypeIDissimilarSpecies/dissociationIonisationTypeIDissimilarSpecies.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/atomAtomIonisationDissimilarSpecies/atomAtomIonisationDissimilarSpecies.C:        const scalar& deltaT = mesh_.time().deltaT().value();
./reactions/derived/atomAtomIonisationDissimilarSpecies/atomAtomIonisationDissimilarSpecies.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/atomAtomIonisationDissimilarSpecies/atomAtomIonisationDissimilarSpecies.C:                )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/dissociationIonisationTypeISameSpecies/dissociationIonisationTypeISameSpecies.C:        const scalar& deltaT = mesh_.time().deltaT().value();
./reactions/derived/dissociationIonisationTypeISameSpecies/dissociationIonisationTypeISameSpecies.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/dissociationIonisationTypeISameSpecies/dissociationIonisationTypeISameSpecies.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/dissociationTypeIDissimilarSpecies/dissociationTypeIDissimilarSpecies.C:        const scalar& deltaT = mesh_.time().deltaT().value();
./reactions/derived/dissociationTypeIDissimilarSpecies/dissociationTypeIDissimilarSpecies.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/dissociationTypeIDissimilarSpecies/dissociationTypeIDissimilarSpecies.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/dissociationTypeISameSpecies/dissociationTypeISameSpecies.C:        const scalar& deltaT = mesh_.time().deltaT().value();
./reactions/derived/dissociationTypeISameSpecies/dissociationTypeISameSpecies.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/dissociationTypeISameSpecies/dissociationTypeISameSpecies.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/atomElectronIonisation/atomElectronIonisation.C:        const scalar& deltaT = mesh_.time().deltaT().value();
./reactions/derived/atomElectronIonisation/atomElectronIonisation.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/moleculeElectronDissociationIonisation/moleculeElectronDissociationIonisation.C:        const scalar& deltaT = mesh_.time().deltaT().value();
./reactions/derived/moleculeElectronDissociationIonisation/moleculeElectronDissociationIonisation.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/moleculeElectronDissociationIonisation/moleculeElectronDissociationIonisation.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/moleculeIonDissociationIonisation/moleculeIonDissociationIonisation.C:        const scalar& deltaT = mesh_.time().deltaT().value();
./reactions/derived/moleculeIonDissociationIonisation/moleculeIonDissociationIonisation.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/moleculeIonDissociationIonisation/moleculeIonDissociationIonisation.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/dissociationIonisationExchange/dissociationIonisationExchange.C:        const scalar& deltaT = mesh_.time().deltaT().value();
./reactions/derived/dissociationIonisationExchange/dissociationIonisationExchange.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/dissociationIonisationExchange/dissociationIonisationExchange.C:                    )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/dissociationIonisationExchange/dissociationIonisationExchange.C:                    )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/dissociationIonisationExchange/dissociationIonisationExchange.C:                    )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/dissociationIonisationExchange/dissociationIonisationExchange.C:                    )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/atomAtomIonisationSameSpecies/atomAtomIonisationSameSpecies.C:        const scalar& deltaT = mesh_.time().deltaT().value();
./reactions/derived/atomAtomIonisationSameSpecies/atomAtomIonisationSameSpecies.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/chargeExchange/chargeExchange.C:        const scalar& deltaT = mesh_.time().deltaT().value();
./reactions/derived/chargeExchange/chargeExchange.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/chargeExchange/chargeExchange.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/chargeExchange/chargeExchange.C:                )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/reverseAssociativeIonisation/reverseAssociativeIonisation.C:        const scalar& deltaT = mesh_.time().deltaT().value();
./reactions/derived/reverseAssociativeIonisation/reverseAssociativeIonisation.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/forwardAssociativeIonisation/forwardAssociativeIonisation.C:        const scalar& deltaT = mesh_.time().deltaT().value();
./reactions/derived/forwardAssociativeIonisation/forwardAssociativeIonisation.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);
./reactions/derived/forwardAssociativeIonisation/forwardAssociativeIonisation.C:            )/(counterIndex*deltaT*numberDensities_[0]* numberDensities_[1]*volume);








./initaliseDsmcParcels/derived/dsmcLaserHeatingFill/dsmcLaserHeatingFill.C:    deltaT_(0.0),
./initaliseDsmcParcels/derived/dsmcLaserHeatingFill/dsmcLaserHeatingFill.C:    deltaT_ = readScalar((dsmcInitialiseDict_.lookup("axialTemperature")));
./initaliseDsmcParcels/derived/dsmcLaserHeatingFill/dsmcLaserHeatingFill.C:            scalar cellTemperature = deltaT_*exp(-1.0*pow(cellCentreY/r0_,2.0));
./initaliseDsmcParcels/derived/dsmcLaserHeatingFill/dsmcLaserHeatingFill.C:        scalar cellTemperature = deltaT_*exp(-1.0*sqr(cellCentreI/r0_));
./initaliseDsmcParcels/derived/dsmcLaserHeatingFill/dsmcLaserHeatingFill.H:        scalar deltaT_;





./macroscopicProperties/derived/combined/dsmcZone/dsmcZone.C:    const scalar& deltaT = time_.mdTimeInterval().deltaT();
./macroscopicProperties/derived/combined/dsmcZone/dsmcZone.C:    label nBins = label(writeInterval/deltaT);
./macroscopicProperties/derived/combined/dsmcZone/dsmcZone.C:        nSteps_ = label(writeInterval/deltaT);        
./macroscopicProperties/derived/combined/dsmcZone/dsmcZone.C:            const scalar deltaT = mesh_.time().deltaTValue();
./macroscopicProperties/derived/combined/dsmcZone/dsmcZone.C:                meanCollisionTimeTimeStepRatio_[n] = meanCollisionTime_[n]/deltaT;
./macroscopicProperties/derived/combined/dsmcZone/dsmcZone.C:            const scalar& deltaT = time_.mdTimeInterval().deltaT();
./macroscopicProperties/derived/combined/dsmcZone/dsmcZone.C:                timeField[N_.size()-t-1] = runTime.timeOutputValue() - deltaT*t; 

./macroscopicProperties/derived/combined/dsmcZoneBounded/dsmcZoneBounded.C:    const scalar& deltaT = time_.mdTimeInterval().deltaT();
./macroscopicProperties/derived/combined/dsmcZoneBounded/dsmcZoneBounded.C:    label nBins = label(writeInterval/deltaT);
./macroscopicProperties/derived/combined/dsmcZoneBounded/dsmcZoneBounded.C:        nSteps_ = label(writeInterval/deltaT);        
./macroscopicProperties/derived/combined/dsmcZoneBounded/dsmcZoneBounded.C:            const scalar& deltaT = time_.mdTimeInterval().deltaT();
./macroscopicProperties/derived/combined/dsmcZoneBounded/dsmcZoneBounded.C:                timeField[N_.size()-t-1] = runTime.timeOutputValue() - deltaT*t; 
./macroscopicProperties/derived/combined/dsmcBinsMethod/dsmcBinsMethod.H://         scalar deltaT_;
./macroscopicProperties/derived/density/srbsFluctuationsZone/srbsFluctuationsZone.C:    scalar deltaT = t.deltaT().value();
./macroscopicProperties/derived/density/srbsFluctuationsZone/srbsFluctuationsZone.C:    nInstantSteps_ = label(writeInterval/deltaT);
./macroscopicProperties/derived/density/srbsFluctuationsZone/srbsFluctuationsZone.C:            scalar dt = time_.time().deltaT().value();
./macroscopicProperties/derived/density/srbsFluctuationsComplexZone/srbsFluctuationsComplexZone.C:    scalar deltaT = t.deltaT().value();
./macroscopicProperties/derived/density/srbsFluctuationsComplexZone/srbsFluctuationsComplexZone.C:    nInstantSteps_ = label(writeInterval/deltaT);
./macroscopicProperties/derived/density/srbsFluctuationsComplexZone/srbsFluctuationsComplexZone.C:            scalar dt = time_.time().deltaT().value();
./macroscopicProperties/derived/density/dsmcDensityFluctuationsZone/dsmcDensityFluctuationsZone.C:    scalar deltaT = t.deltaT().value();
./macroscopicProperties/derived/density/dsmcDensityFluctuationsZone/dsmcDensityFluctuationsZone.C:    nInstantSteps_ = label(writeInterval/deltaT);
./macroscopicProperties/derived/density/dsmcDensityFluctuationsZone/dsmcDensityFluctuationsZone.C:            scalar dt = time_.time().deltaT().value();
./macroscopicProperties/derived/density/crbsFluctuationsZone/crbsFluctuationsZone.C:    scalar deltaT = t.deltaT().value();
./macroscopicProperties/derived/density/crbsFluctuationsZone/crbsFluctuationsZone.C:    nInstantSteps_ = label(writeInterval/deltaT);
./macroscopicProperties/derived/density/crbsFluctuationsZone/crbsFluctuationsZone.C:            scalar dt = time_.time().deltaT().value();
./macroscopicProperties/derived/massFlux/atomisticMassFluxMultiSurfaces/atomisticMassFluxMultiSurfaces.C:        scalar averagingTime = time_.nAveragingTimeSteps()*time_.mdTimeInterval().deltaT();
./macroscopicProperties/derived/massFlux/dsmcMassFluxSurface/dsmcMassFluxSurface.C:        scalar averagingTime = averagingCounter_*time_.mdTimeInterval().deltaT();












./controllers/basic/dsmcStateController/dsmcStateController.C:    const scalar& avTimeInterval = time_.averageTimeInterval().deltaT();
./controllers/derived/others/forcingFunctionController/forcingFunctionController.C:        currentTime_ = mesh_.time().deltaTValue()*nTimeSteps_;
./controllers/derived/others/forcingFunctionController/forcingFunctionController.C:                p->U() += 0.5*acceleration*mesh_.time().deltaTValue();
./controllers/derived/others/forcingFunctionController/forcingFunctionController.C:                p->U() -= 0.5*acceleration*mesh_.time().deltaTValue();
./controllers/derived/others/forcingFunctionController/forcingFunctionController.C:                p->U() += acceleration*mesh_.time().deltaTValue();
./controllers/derived/others/timeVaryingOnlyForcingFunctionController/timeVaryingOnlyForcingFunctionController.C:        currentTime_ = mesh_.time().deltaTValue()*nTimeSteps_;
./controllers/derived/others/timeVaryingOnlyForcingFunctionController/timeVaryingOnlyForcingFunctionController.C:                p->U() += 0.5*acceleration*mesh_.time().deltaTValue();
./controllers/derived/others/timeVaryingOnlyForcingFunctionController/timeVaryingOnlyForcingFunctionController.C:                p->U() -= 0.5*acceleration*mesh_.time().deltaTValue();
./controllers/derived/others/timeVaryingOnlyForcingFunctionController/timeVaryingOnlyForcingFunctionController.C:                p->U() += acceleration*mesh_.time().deltaTValue();
./controllers/derived/others/permeabilityController/permeabilityController.C://             const scalar timeStepRatio = mesh_.time().deltaTValue()/1.0e-12;
./controllers/derived/others/gravitationalAccelerationController/gravitationalAccelerationController.C:                p->U() += 0.5*acceleration_*mesh_.time().deltaTValue();
./controllers/derived/others/gravitationalAccelerationController/gravitationalAccelerationController.C:                p->U() -= 0.5*acceleration_*mesh_.time().deltaTValue();
./controllers/derived/others/gravitationalAccelerationController/gravitationalAccelerationController.C:                p->U() += acceleration_*mesh_.time().deltaTValue();
./controllers/derived/others/gravitationalController/gravitationalController.C:            p->U() += 0.5*acceleration*mesh_.time().deltaTValue();
./controllers/derived/others/gravitationalController/gravitationalController.C:            p->U() -= 0.5*acceleration*mesh_.time().deltaTValue();
./controllers/derived/others/gravitationalController/gravitationalController.C:            p->U() += acceleration*mesh_.time().deltaTValue();
./controllers/derived/others/crbsController/crbsController.C:        currentTime_ = mesh_.time().deltaTValue()*nTimeSteps_;
./controllers/derived/others/crbsController/crbsController.C:                p->U() += 0.5*acceleration*mesh_.time().deltaTValue();
./controllers/derived/others/crbsController/crbsController.C:                p->U() -= 0.5*acceleration*mesh_.time().deltaTValue();
./controllers/derived/others/crbsController/crbsController.C:                p->U() += acceleration*mesh_.time().deltaTValue();
./controllers/derived/temperature/temperatureBerendsenBins/temperatureBerendsenBins.C:        const scalar deltaTBin = (endTemperature - startTemperature)/(nBins - 1);
./controllers/derived/temperature/temperatureBerendsenBins/temperatureBerendsenBins.C:            binTemperatures_[n] = startTemperature + n*deltaTBin;
./controllers/derived/temperature/temperatureBerendsenBins/temperatureBerendsenBins.C:        const scalar& deltaTDSMC = mesh_.time().deltaTValue(); // time step 
./controllers/derived/temperature/temperatureBerendsenBins/temperatureBerendsenBins.C:                chi_[n] = sqrt(1.0 + (deltaTDSMC/tauT_)*((binTemperatures_[n]/translationalTemperature_[n]) - 1.0) );
./controllers/derived/temperature/temperatureZoneController/temperatureZoneController.C:        const scalar& deltaTDSMC = mesh_.time().deltaTValue(); // time step 
./controllers/derived/temperature/temperatureZoneController/temperatureZoneController.C:            chi_ = sqrt(1.0 + (deltaTDSMC/tauT_)*((temperature_/measuredTranslationalTemperature_) - 1.0) );
./controllers/derived/temperature/temperatureBinsController/BackUptemperatureBinsController.C:        const scalar& deltaTMD = time_.mdTimeInterval().deltaT();
./controllers/derived/temperature/temperatureBinsController/BackUptemperatureBinsController.C:                chi_[n] = sqrt(1.0 + (deltaTMD/tauT_)*((temperature_/measuredTranslationalTemperature_[n]) - 1.0) );
./controllers/derived/temperature/temperatureBinsController/temperatureBinsController.C:    const scalar& deltaTBin = (endTemperature_ - startTemperature_)/(nBins_ - 1);
./controllers/derived/temperature/temperatureBinsController/temperatureBinsController.C:        binTemperatures_[n] = startTemperature_ + n*deltaTBin;
./controllers/derived/temperature/temperatureBinsController/temperatureBinsController.C:        const scalar& deltaTDSMC = mesh_.time().deltaTValue(); // time step 
./controllers/derived/temperature/temperatureBinsController/temperatureBinsController.C:                chi_[n] = sqrt(1.0 + (deltaTDSMC/tauT_)*((binTemperatures_[n]/measuredTranslationalTemperature_[n]) - 1.0) );
./controllers/derived/temperature/temperatureController/temperatureController.C:            const scalar& deltaTDSMC = mesh_.time().deltaTValue(); // time step 
./controllers/derived/temperature/temperatureController/temperatureController.C:                chi_[c] = sqrt(1.0 + (deltaTDSMC/tauT_)*((temperature_/measuredTranslationalTemperature_[c]) - 1.0) );








./submodels/InflowBoundaryModel/FreeStream/FreeStream.C:    const scalar deltaT = mesh.time().deltaTValue();
./submodels/InflowBoundaryModel/FreeStream/FreeStream.C:                mag(patch.faceAreas())*numberDensities_[i]*deltaT
